/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_BLOCKCHAIN_PB_H_INCLUDED
#define PB_BLOCKCHAIN_PB_H_INCLUDED
#include <extern/nanopb/pb.h>
#include "action.pb.h"
#include "timestamp.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Account Metadata */
typedef struct _AccountMeta { 
    pb_callback_t address; 
    pb_callback_t balance; 
    uint64_t nonce; 
    uint64_t pendingNonce; 
    uint64_t numActions; 
    bool isContract; 
} AccountMeta;

typedef struct _BlockHeaderCore { 
    uint32_t version; 
    uint64_t height; 
    bool has_timestamp;
    google_protobuf_Timestamp timestamp; 
    pb_callback_t prevBlockHash; 
    pb_callback_t txRoot; 
    pb_callback_t deltaStateDigest; 
    pb_callback_t receiptRoot; 
    pb_callback_t logsBloom; 
} BlockHeaderCore;

/* BlockIdentifier Metadata */
typedef struct _BlockIdentifier { 
    pb_callback_t hash; 
    uint64_t height; 
} BlockIdentifier;

/* Block Metadata */
typedef struct _BlockMeta { 
    pb_callback_t hash; 
    uint64_t height; 
    bool has_timestamp;
    google_protobuf_Timestamp timestamp; 
    int64_t numActions; 
    pb_callback_t producerAddress; 
    pb_callback_t transferAmount; 
    pb_callback_t txRoot; 
    pb_callback_t receiptRoot; 
    pb_callback_t deltaStateDigest; 
    pb_callback_t logsBloom; 
    pb_callback_t previousBlockHash; 
} BlockMeta;

typedef struct _EpochData { 
    uint64_t num; 
    uint64_t height; 
    uint64_t gravityChainStartHeight; 
} EpochData;

/* header of a block */
typedef struct _BlockHeader { 
    bool has_core;
    BlockHeaderCore core; 
    pb_callback_t producerPubkey; 
    pb_callback_t signature; 
} BlockHeader;

/* Blockchain Metadata */
typedef struct _ChainMeta { 
    uint64_t height; 
    int64_t numActions; 
    int64_t tps; 
    bool has_epoch;
    EpochData epoch; 
    float tpsFloat; 
} ChainMeta;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define BlockHeader_init_default                 {false, BlockHeaderCore_init_default, {{NULL}, NULL}, {{NULL}, NULL}}
#define BlockHeaderCore_init_default             {0, 0, false, google_protobuf_Timestamp_init_default, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define EpochData_init_default                   {0, 0, 0}
#define ChainMeta_init_default                   {0, 0, 0, false, EpochData_init_default, 0}
#define BlockMeta_init_default                   {{{NULL}, NULL}, 0, false, google_protobuf_Timestamp_init_default, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define BlockIdentifier_init_default             {{{NULL}, NULL}, 0}
#define AccountMeta_init_default                 {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, 0}
#define BlockHeader_init_zero                    {false, BlockHeaderCore_init_zero, {{NULL}, NULL}, {{NULL}, NULL}}
#define BlockHeaderCore_init_zero                {0, 0, false, google_protobuf_Timestamp_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define EpochData_init_zero                      {0, 0, 0}
#define ChainMeta_init_zero                      {0, 0, 0, false, EpochData_init_zero, 0}
#define BlockMeta_init_zero                      {{{NULL}, NULL}, 0, false, google_protobuf_Timestamp_init_zero, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define BlockIdentifier_init_zero                {{{NULL}, NULL}, 0}
#define AccountMeta_init_zero                    {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define AccountMeta_address_tag                  1
#define AccountMeta_balance_tag                  2
#define AccountMeta_nonce_tag                    3
#define AccountMeta_pendingNonce_tag             4
#define AccountMeta_numActions_tag               5
#define AccountMeta_isContract_tag               6
#define BlockHeaderCore_version_tag              1
#define BlockHeaderCore_height_tag               2
#define BlockHeaderCore_timestamp_tag            3
#define BlockHeaderCore_prevBlockHash_tag        4
#define BlockHeaderCore_txRoot_tag               5
#define BlockHeaderCore_deltaStateDigest_tag     6
#define BlockHeaderCore_receiptRoot_tag          7
#define BlockHeaderCore_logsBloom_tag            8
#define BlockIdentifier_hash_tag                 1
#define BlockIdentifier_height_tag               2
#define BlockMeta_hash_tag                       1
#define BlockMeta_height_tag                     2
#define BlockMeta_timestamp_tag                  3
#define BlockMeta_numActions_tag                 4
#define BlockMeta_producerAddress_tag            5
#define BlockMeta_transferAmount_tag             6
#define BlockMeta_txRoot_tag                     7
#define BlockMeta_receiptRoot_tag                8
#define BlockMeta_deltaStateDigest_tag           9
#define BlockMeta_logsBloom_tag                  10
#define BlockMeta_previousBlockHash_tag          11
#define EpochData_num_tag                        1
#define EpochData_height_tag                     2
#define EpochData_gravityChainStartHeight_tag    3
#define BlockHeader_core_tag                     1
#define BlockHeader_producerPubkey_tag           2
#define BlockHeader_signature_tag                3
#define ChainMeta_height_tag                     1
#define ChainMeta_numActions_tag                 2
#define ChainMeta_tps_tag                        3
#define ChainMeta_epoch_tag                      4
#define ChainMeta_tpsFloat_tag                   5

/* Struct field encoding specification for nanopb */
#define BlockHeader_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  core,              1) \
X(a, CALLBACK, SINGULAR, BYTES,    producerPubkey,    2) \
X(a, CALLBACK, SINGULAR, BYTES,    signature,         3)
#define BlockHeader_CALLBACK pb_default_field_callback
#define BlockHeader_DEFAULT NULL
#define BlockHeader_core_MSGTYPE BlockHeaderCore

#define BlockHeaderCore_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   version,           1) \
X(a, STATIC,   SINGULAR, UINT64,   height,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  timestamp,         3) \
X(a, CALLBACK, SINGULAR, BYTES,    prevBlockHash,     4) \
X(a, CALLBACK, SINGULAR, BYTES,    txRoot,            5) \
X(a, CALLBACK, SINGULAR, BYTES,    deltaStateDigest,   6) \
X(a, CALLBACK, SINGULAR, BYTES,    receiptRoot,       7) \
X(a, CALLBACK, SINGULAR, BYTES,    logsBloom,         8)
#define BlockHeaderCore_CALLBACK pb_default_field_callback
#define BlockHeaderCore_DEFAULT NULL
#define BlockHeaderCore_timestamp_MSGTYPE google_protobuf_Timestamp

#define EpochData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   num,               1) \
X(a, STATIC,   SINGULAR, UINT64,   height,            2) \
X(a, STATIC,   SINGULAR, UINT64,   gravityChainStartHeight,   3)
#define EpochData_CALLBACK NULL
#define EpochData_DEFAULT NULL

#define ChainMeta_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   height,            1) \
X(a, STATIC,   SINGULAR, INT64,    numActions,        2) \
X(a, STATIC,   SINGULAR, INT64,    tps,               3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  epoch,             4) \
X(a, STATIC,   SINGULAR, FLOAT,    tpsFloat,          5)
#define ChainMeta_CALLBACK NULL
#define ChainMeta_DEFAULT NULL
#define ChainMeta_epoch_MSGTYPE EpochData

#define BlockMeta_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   hash,              1) \
X(a, STATIC,   SINGULAR, UINT64,   height,            2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  timestamp,         3) \
X(a, STATIC,   SINGULAR, INT64,    numActions,        4) \
X(a, CALLBACK, SINGULAR, STRING,   producerAddress,   5) \
X(a, CALLBACK, SINGULAR, STRING,   transferAmount,    6) \
X(a, CALLBACK, SINGULAR, STRING,   txRoot,            7) \
X(a, CALLBACK, SINGULAR, STRING,   receiptRoot,       8) \
X(a, CALLBACK, SINGULAR, STRING,   deltaStateDigest,   9) \
X(a, CALLBACK, SINGULAR, STRING,   logsBloom,        10) \
X(a, CALLBACK, SINGULAR, STRING,   previousBlockHash,  11)
#define BlockMeta_CALLBACK pb_default_field_callback
#define BlockMeta_DEFAULT NULL
#define BlockMeta_timestamp_MSGTYPE google_protobuf_Timestamp

#define BlockIdentifier_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   hash,              1) \
X(a, STATIC,   SINGULAR, UINT64,   height,            2)
#define BlockIdentifier_CALLBACK pb_default_field_callback
#define BlockIdentifier_DEFAULT NULL

#define AccountMeta_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   address,           1) \
X(a, CALLBACK, SINGULAR, STRING,   balance,           2) \
X(a, STATIC,   SINGULAR, UINT64,   nonce,             3) \
X(a, STATIC,   SINGULAR, UINT64,   pendingNonce,      4) \
X(a, STATIC,   SINGULAR, UINT64,   numActions,        5) \
X(a, STATIC,   SINGULAR, BOOL,     isContract,        6)
#define AccountMeta_CALLBACK pb_default_field_callback
#define AccountMeta_DEFAULT NULL

extern const pb_msgdesc_t BlockHeader_msg;
extern const pb_msgdesc_t BlockHeaderCore_msg;
extern const pb_msgdesc_t EpochData_msg;
extern const pb_msgdesc_t ChainMeta_msg;
extern const pb_msgdesc_t BlockMeta_msg;
extern const pb_msgdesc_t BlockIdentifier_msg;
extern const pb_msgdesc_t AccountMeta_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define BlockHeader_fields &BlockHeader_msg
#define BlockHeaderCore_fields &BlockHeaderCore_msg
#define EpochData_fields &EpochData_msg
#define ChainMeta_fields &ChainMeta_msg
#define BlockMeta_fields &BlockMeta_msg
#define BlockIdentifier_fields &BlockIdentifier_msg
#define AccountMeta_fields &AccountMeta_msg

/* Maximum encoded size of messages (where known) */
/* BlockHeader_size depends on runtime parameters */
/* BlockHeaderCore_size depends on runtime parameters */
/* BlockMeta_size depends on runtime parameters */
/* BlockIdentifier_size depends on runtime parameters */
/* AccountMeta_size depends on runtime parameters */
#define ChainMeta_size                           73
#define EpochData_size                           33

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
